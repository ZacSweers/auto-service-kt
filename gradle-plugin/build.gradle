apply plugin: "java-gradle-plugin"
apply plugin: "org.jetbrains.kotlin.jvm"
apply plugin: 'org.jetbrains.dokka'
apply plugin: "com.vanniktech.maven.publish"

//region BuildConstants.kt template for setting the project version in the build
sourceSets {
  main.java.srcDirs += "$buildDir/generated/sources/templates/kotlin/main"
}

TaskProvider copyTemplatesProvider = tasks.register("copyTemplates", Copy) {
  it.inputs.property("version", VERSION_NAME)
  it.inputs.property("asVersion", autoservice_version)
  it.inputs.property("group", GROUP)
  from project.layout.projectDirectory.dir("templates")
  into project.layout.buildDirectory.dir("generated/sources/templates/kotlin/main")
  expand(
      'projectGroup': "${GROUP}",
      'autoServiceVersion': "${autoservice_version}",
      'projectVersion': "${VERSION_NAME}"
  )
  filteringCharset = 'UTF-8'
}
//endregion

compileKotlin {
  dependsOn copyTemplatesProvider
}

gradlePlugin {
  plugins {
    autoServicePlugin {
      id = 'dev.zacsweers.autoservice'
      implementationClass = 'dev.zacsweers.autoservice.gradle.AutoServiceGradleSubplugin'
    }
  }
}

tasks.named("dokkaHtml") {
  outputDirectory.set(rootProject.file("../docs/0.x"))
  dokkaSourceSets.configureEach {
    skipDeprecated.set(true)
  }
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-gradle-plugin-api:$kotlin_version"
  compileOnly "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
}